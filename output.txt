Test: div_convert 104 5 => Expected: 404, Got: 404 - PASS
Test: div_convert 156 8 => Expected: 234, Got: 234 - PASS
Test: div_convert 255 16 => Expected: FF, Got: FF - PASS
Test: div_convert 255 10 => Expected: 255, Got: 255 - PASS
Test: div_convert 42 2 => Expected: 101010, Got: 101010 - PASS
Test: div_convert 0 2 => Expected: 0, Got: 0 - PASS
Test: div_convert 0 10 => Expected: 0, Got: 0 - PASS
Test: div_convert 1 16 => Expected: 1, Got: 1 - PASS
Test: div_convert 8 2 => Expected: 1000, Got: 1000 - PASS
Test: div_convert 64 8 => Expected: 100, Got: 100 - PASS
Test: div_convert 256 16 => Expected: 100, Got: 100 - PASS
Test: div_convert 4294967295 16 => Expected: FFFFFFFF, Got: FFFFFFFF - PASS
Test: sub_convert 104 5 => Expected: 404, Got: 404 - PASS
Test: sub_convert 156 8 => Expected: 234, Got: 234 - PASS
Test: sub_convert 255 16 => Expected: FF, Got: FF - PASS
Test: sub_convert 42 2 => Expected: 101010, Got: 101010 - PASS
Test: sub_convert 0 2 => Expected: 0, Got: 0 - PASS
Test: sub_convert 1 16 => Expected: 1, Got: 1 - PASS
Test: sub_convert 8 2 => Expected: 1000, Got: 1000 - PASS
Test: sub_convert 64 8 => Expected: 100, Got: 100 - PASS
Test: sub_convert 4294967295 16 => Expected: FFFFFFFF, Got: FFFFFFFF - PASS
Test: div_convert 1000 2 => Expected: 1111101000, Got: 1111101000 - PASS
Test: sub_convert 1000 2 => Expected: 1111101000, Got: 1111101000 - PASS
Test: div_convert 1000 8 => Expected: 1750, Got: 1750 - PASS
Test: sub_convert 1000 8 => Expected: 1750, Got: 1750 - PASS
Test: div_convert 1000 16 => Expected: 3E8, Got: 3E8 - PASS
Test: sub_convert 1000 16 => Expected: 3E8, Got: 3E8 - PASS
Original: Binary = 101 Octal = 5 Decimal = 5 Hex = 5
Left Shift 3: Binary = 101 Octal = 5 Decimal = 40 Hex = 5
AND 0xFF: Binary = 101 Octal = 5 Decimal = 5 Hex = 5
Original: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
Left Shift 3: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
AND 0xFF: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
Original: Binary = 1 Octal = 1 Decimal = 1 Hex = 1
Left Shift 3: Binary = 1 Octal = 1 Decimal = 8 Hex = 1
AND 0xFF: Binary = 1 Octal = 1 Decimal = 1 Hex = 1
Original: Binary = 1000 Octal = 10 Decimal = 8 Hex = 8
Left Shift 3: Binary = 1000 Octal = 10 Decimal = 64 Hex = 8
AND 0xFF: Binary = 1000 Octal = 10 Decimal = 8 Hex = 8
Original: Binary = 11111111 Octal = 377 Decimal = 255 Hex = FF
Left Shift 3: Binary = 11111111 Octal = 377 Decimal = 2040 Hex = FF
AND 0xFF: Binary = 11111111 Octal = 377 Decimal = 255 Hex = FF
Original: Binary = 100000000 Octal = 400 Decimal = 256 Hex = 100
Left Shift 3: Binary = 100000000 Octal = 400 Decimal = 2048 Hex = 100
AND 0xFF: Binary = 100000000 Octal = 400 Decimal = 0 Hex = 100
Test: div_convert 104 5 => Expected: 404, Got: 404 - PASS
Test: div_convert 156 8 => Expected: 234, Got: 234 - PASS
Test: div_convert 255 16 => Expected: FF, Got: FF - PASS
Test: div_convert 255 10 => Expected: 255, Got: 255 - PASS
Test: div_convert 255 2 => Expected: 11111111, Got: 11111111 - PASS
Test: div_convert 0 2 => Expected: 0, Got: 0 - PASS
Test: div_convert 0 8 => Expected: 0, Got: 0 - PASS
Test: div_convert 0 10 => Expected: 0, Got: 0 - PASS
Test: div_convert 0 16 => Expected: 0, Got: 0 - PASS
Test: div_convert 1 2 => Expected: 1, Got: 1 - PASS
Test: div_convert 1 8 => Expected: 1, Got: 1 - PASS
Test: div_convert 1 16 => Expected: 1, Got: 1 - PASS
Test: div_convert 8 2 => Expected: 1000, Got: 1000 - PASS
Test: div_convert 16 2 => Expected: 10000, Got: 10000 - PASS
Test: div_convert 64 8 => Expected: 100, Got: 100 - PASS
Test: div_convert 256 16 => Expected: 100, Got: 100 - PASS
Test: div_convert 4294967295 2 => Expected: 11111111111111111111111111111111, Got: 11111111111111111111111111111111 - PASS
Test: div_convert 4294967295 8 => Expected: 37777777777, Got: 37777777777 - PASS
Test: div_convert 4294967295 10 => Expected: 4294967295, Got: 4294967295 - PASS
Test: div_convert 4294967295 16 => Expected: FFFFFFFF, Got: FFFFFFFF - PASS
Test: div_convert 42 2 => Expected: 101010, Got: 101010 - PASS
Test: div_convert 42 5 => Expected: 132, Got: 132 - PASS
Test: div_convert 42 8 => Expected: 52, Got: 52 - PASS
Test: div_convert 42 10 => Expected: 42, Got: 42 - PASS
Test: div_convert 42 16 => Expected: 2A, Got: 2A - PASS
Test: sub_convert 104 5 => Expected: 404, Got: 404 - PASS
Test: sub_convert 156 8 => Expected: 234, Got: 234 - PASS
Test: sub_convert 255 16 => Expected: FF, Got: FF - PASS
Test: sub_convert 255 10 => Expected: 255, Got: 255 - PASS
Test: sub_convert 255 2 => Expected: 11111111, Got: 11111111 - PASS
Test: sub_convert 0 2 => Expected: 0, Got: 0 - PASS
Test: sub_convert 0 8 => Expected: 0, Got: 0 - PASS
Test: sub_convert 0 10 => Expected: 0, Got: 0 - PASS
Test: sub_convert 0 16 => Expected: 0, Got: 0 - PASS
Test: sub_convert 1 2 => Expected: 1, Got: 1 - PASS
Test: sub_convert 1 8 => Expected: 1, Got: 1 - PASS
Test: sub_convert 1 16 => Expected: 1, Got: 1 - PASS
Test: sub_convert 8 2 => Expected: 1000, Got: 1000 - PASS
Test: sub_convert 16 2 => Expected: 10000, Got: 10000 - PASS
Test: sub_convert 64 8 => Expected: 100, Got: 100 - PASS
Test: sub_convert 256 16 => Expected: 100, Got: 100 - PASS
Test: sub_convert 4294967295 2 => Expected: 11111111111111111111111111111111, Got: 11111111111111111111111111111111 - PASS
Test: sub_convert 4294967295 8 => Expected: 37777777777, Got: 37777777777 - PASS
Test: sub_convert 4294967295 10 => Expected: 4294967295, Got: 4294967295 - PASS
Test: sub_convert 4294967295 16 => Expected: FFFFFFFF, Got: FFFFFFFF - PASS
Test: sub_convert 42 2 => Expected: 101010, Got: 101010 - PASS
Test: sub_convert 42 5 => Expected: 132, Got: 132 - PASS
Test: sub_convert 42 8 => Expected: 52, Got: 52 - PASS
Test: sub_convert 42 10 => Expected: 42, Got: 42 - PASS
Test: sub_convert 42 16 => Expected: 2A, Got: 2A - PASS
Test: div_convert 7 2 => Expected: 111, Got: 111 - PASS
Test: sub_convert 7 2 => Expected: 111, Got: 111 - PASS
Test: div_convert 15 8 => Expected: 17, Got: 17 - PASS
Test: sub_convert 15 8 => Expected: 17, Got: 17 - PASS
Test: div_convert 31 16 => Expected: 1F, Got: 1F - PASS
Test: sub_convert 31 16 => Expected: 1F, Got: 1F - PASS
Test: div_convert 1000 2 => Expected: 1111101000, Got: 1111101000 - PASS
Test: sub_convert 1000 2 => Expected: 1111101000, Got: 1111101000 - PASS
Test: div_convert 1000 8 => Expected: 1750, Got: 1750 - PASS
Test: sub_convert 1000 8 => Expected: 1750, Got: 1750 - PASS
Test: div_convert 1000 16 => Expected: 3E8, Got: 3E8 - PASS
Test: sub_convert 1000 16 => Expected: 3E8, Got: 3E8 - PASS
Original: Binary = 101 Octal = 5 Decimal = 5 Hex = 5
Left Shift 3: Binary = 101 Octal = 5 Decimal = 40 Hex = 5
AND 0xFF: Binary = 101 Octal = 5 Decimal = 5 Hex = 5
Original: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
Left Shift 3: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
AND 0xFF: Binary = 0 Octal = 0 Decimal = 0 Hex = 0
Original: Binary = 1 Octal = 1 Decimal = 1 Hex = 1
Left Shift 3: Binary = 1 Octal = 1 Decimal = 8 Hex = 1
AND 0xFF: Binary = 1 Octal = 1 Decimal = 1 Hex = 1
Original: Binary = 111 Octal = 7 Decimal = 7 Hex = 7
Left Shift 3: Binary = 111 Octal = 7 Decimal = 56 Hex = 7
AND 0xFF: Binary = 111 Octal = 7 Decimal = 7 Hex = 7
Original: Binary = 1111 Octal = 17 Decimal = 15 Hex = F
Left Shift 3: Binary = 1111 Octal = 17 Decimal = 120 Hex = F
AND 0xFF: Binary = 1111 Octal = 17 Decimal = 15 Hex = F
Original: Binary = 1000 Octal = 10 Decimal = 8 Hex = 8
Left Shift 3: Binary = 1000 Octal = 10 Decimal = 64 Hex = 8
AND 0xFF: Binary = 1000 Octal = 10 Decimal = 8 Hex = 8
Original: Binary = 10000 Octal = 20 Decimal = 16 Hex = 10
Left Shift 3: Binary = 10000 Octal = 20 Decimal = 128 Hex = 10
AND 0xFF: Binary = 10000 Octal = 20 Decimal = 16 Hex = 10
Original: Binary = 100000 Octal = 40 Decimal = 32 Hex = 20
Left Shift 3: Binary = 100000 Octal = 40 Decimal = 256 Hex = 20
AND 0xFF: Binary = 100000 Octal = 40 Decimal = 32 Hex = 20
Original: Binary = 11111111 Octal = 377 Decimal = 255 Hex = FF
Left Shift 3: Binary = 11111111 Octal = 377 Decimal = 2040 Hex = FF
AND 0xFF: Binary = 11111111 Octal = 377 Decimal = 255 Hex = FF
Original: Binary = 100000000 Octal = 400 Decimal = 256 Hex = 100
Left Shift 3: Binary = 100000000 Octal = 400 Decimal = 2048 Hex = 100
AND 0xFF: Binary = 100000000 Octal = 400 Decimal = 0 Hex = 100
Original: Binary = 111111111 Octal = 777 Decimal = 511 Hex = 1FF
Left Shift 3: Binary = 111111111 Octal = 777 Decimal = 4088 Hex = 1FF
AND 0xFF: Binary = 111111111 Octal = 777 Decimal = 255 Hex = 1FF
Original: Binary = 1111101000 Octal = 1750 Decimal = 1000 Hex = 3E8
Left Shift 3: Binary = 1111101000 Octal = 1750 Decimal = 8000 Hex = 3E8
AND 0xFF: Binary = 1111101000 Octal = 1750 Decimal = 232 Hex = 3E8
Original: Binary = 1111111111111111 Octal = 177777 Decimal = 65535 Hex = FFFF
Left Shift 3: Binary = 1111111111111111 Octal = 177777 Decimal = 524280 Hex = FFFF
AND 0xFF: Binary = 1111111111111111 Octal = 177777 Decimal = 255 Hex = FFFF
Original: Binary = 11111111111111111111111111111111 Octal = 37777777777 Decimal = 4294967295 Hex = FFFFFFFF
Left Shift 3: Binary = 11111111111111111111111111111111 Octal = 37777777777 Decimal = 4294967288 Hex = FFFFFFFF
AND 0xFF: Binary = 11111111111111111111111111111111 Octal = 37777777777 Decimal = 255 Hex = FFFFFFFF
Test: div_convert 2147483647 2 => Expected: 1111111111111111111111111111111, Got: 1111111111111111111111111111111 - PASS
Test: sub_convert 2147483647 2 => Expected: 1111111111111111111111111111111, Got: 1111111111111111111111111111111 - PASS
Test: div_convert 1073741824 8 => Expected: 10000000000, Got: 10000000000 - PASS
Test: sub_convert 1073741824 8 => Expected: 10000000000, Got: 10000000000 - PASS
Test: div_convert 268435456 16 => Expected: 10000000, Got: 10000000 - PASS
Test: sub_convert 268435456 16 => Expected: 10000000, Got: 10000000 - PASS
Test: div_convert 4294967294 10 => Expected: 4294967294, Got: 4294967294 - PASS
Test: sub_convert 4294967294 10 => Expected: 4294967294, Got: 4294967294 - PASS
Test: div_convert 4294967294 16 => Expected: FFFFFFFE, Got: FFFFFFFE - PASS
Test: sub_convert 4294967294 16 => Expected: FFFFFFFE, Got: FFFFFFFE - PASS
Test: div_convert 4 5 => Expected: 4, Got: 4 - PASS
Test: sub_convert 4 5 => Expected: 4, Got: 4 - PASS
Test: div_convert 7 8 => Expected: 7, Got: 7 - PASS
Test: sub_convert 7 8 => Expected: 7, Got: 7 - PASS
Test: div_convert 15 16 => Expected: F, Got: F - PASS
Test: sub_convert 15 16 => Expected: F, Got: F - PASS
Test: div_convert 25 5 => Expected: 100, Got: 100 - PASS
Test: sub_convert 25 5 => Expected: 100, Got: 100 - PASS
Test: div_convert 124 5 => Expected: 444, Got: 444 - PASS
Test: sub_convert 124 5 => Expected: 444, Got: 444 - PASS
Test: div_convert 171 16 => Expected: AB, Got: AB - PASS
Test: sub_convert 171 16 => Expected: AB, Got: AB - PASS
Test: div_convert 3405774592 16 => Expected: CAFFFF00, Got: CAFFFF00 - PASS
Test: sub_convert 3405774592 16 => Expected: CAFFFF00, Got: CAFFFF00 - PASS